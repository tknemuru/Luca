using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using System.Data;
using SQL = TKCommon.Utility.MySqlUtility;
using ReversiCommon.Collections;
using STR = TKCommon.Utility.StringUtility;

namespace Luca.Dumm.Logic
{
    /// <summary>
    /// <para>ダミーリバーシ実行ロジッククラス</para>
    /// </summary>
    public class DUM001Logic
    {
        #region "定数"
        #endregion

        #region "メンバ変数"
        #endregion

        #region "コンストラクタ"
        #endregion

        #region "メソッド"
        #region "公開メソッド"
        /// <summary>
        /// <para>生棋譜データをDBから取得する</para>
        /// </summary>
        /// <returns></returns>
        public DataTable GetRawKifuData()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine("SELECT *");
            sb.AppendLine("  FROM AR_RAW_KIFU AS ARK");
            sb.AppendLine(" WHERE NOT EXISTS(SELECT 1");
            sb.AppendLine("                    FROM AR_KIFU_INDEX AS AKI");
            sb.AppendLine("                   WHERE AKI.KIFU_ID = ARK.KIFU_ID)");

            return SQL.ReadDataAdapter(sb.ToString());
        }

        /// <summary>
        /// <para>インデックスをDBに記録する</para>
        /// </summary>
        public void RegisterIndex(string kifuId)
        {
            List<CostIndex> indexList = CostIndex.GetIndexList();
            foreach (CostIndex index in indexList)
            {
                StringBuilder sb = new StringBuilder();
                sb.AppendLine("INSERT INTO AR_KIFU_INDEX");
                sb.AppendLine("     ( KIFU_ID");
                sb.AppendLine("     , TURN_NO");
                sb.AppendLine("     , INDEX_NAME");
                sb.AppendLine("     , INDEX_NO");
                sb.AppendLine("     )");
                sb.AppendLine("VALUES");
                sb.AppendLine("     ( " + kifuId);
                sb.AppendLine("     , " + TurnKeeper.NowTurnNumber.ToString());
                sb.AppendLine("     , " + STR.GetSqlString(index.Name));
                sb.AppendLine("     , " + index.Index);
                sb.AppendLine("     )");

                SQL.ExecuteCommand(sb.ToString());
            }
        }
        #endregion

        #region "内部メソッド"
        #endregion
        #endregion
    }
}
